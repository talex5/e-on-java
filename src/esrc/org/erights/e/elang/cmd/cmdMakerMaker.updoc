#!/usr/bin/env rune

# Copyright 2002 Combex, Inc. under the terms of the MIT X license
# found at http:# www.opensource.org/licenses/mit-license.html ................

    ? pragma.syntax("0.8")

    ? def makeTextWriter := <elib:oldeio.makeTextWriter>
    # value: <makeTextWriter>

    ? def cmdMakerMaker := <elang:cmd.cmdMakerMaker>
    # value: <cmdMakerMaker>

    ? def SystemGC {
    >     to gc() :void {
    >         println("System.gc()")
    >         <unsafe:java.lang.System>.gc()
    >     }
    > }
    # value: <SystemGC>

    ? def cmdLoopMaker := <elang:cmd.cmdLoopMakerAuthor>(SystemGC)
    # value: <cmdLoopMaker>

    ? def makeScopeSetup := <unsafe:org.erights.e.elang.interp.makeScopeSetup>
    # value: <makeScopeSetup>

    ? def [altout, altoutBuf] := makeTextWriter.makeBufferingPair()
    # value: [<a TextWriter>, <stringBuffer "">]

    ? def [alterr, alterrBuf] := makeTextWriter.makeBufferingPair()
    # value: [<a TextWriter>, <stringBuffer "">]

    ? def cmdLoop
    # value: <Resolver>

    ? def props := interp.getProps(); null
    ? def privileged := makeScopeSetup.privileged("__main$",
    >                                             Ref.broken("XXX No stdin 2"),
    >                                             altout,
    >                                             alterr,
    >                                             props,
    >                                             cmdLoop,
    >                                             currentVat)
    # value: <an EEnv>

    ? bind cmdLoop := cmdLoopMaker(["a", "b"], props, privileged.asScope(), false)
    # value: <cmdLoop>

    ? def cmdMaker := cmdMakerMaker(cmdLoop,
    >                               altoutBuf,
    >                               alterrBuf,
    >                               stdout,
    >                               stderr)
    # value: <cmdMaker>

    ?
